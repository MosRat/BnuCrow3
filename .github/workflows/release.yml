name: 'publish android'

on:
  push:
#    tags:
#      - 'v*'


jobs:
  publish-tauri-apk:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: oven-sh/setup-bun@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: |
          echo "y" | sdkmanager --install "ndk;28.0.12433566"

      - run: sdkmanager tools platform-tools

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: "aarch64-linux-android"

      - name: install frontend dependencies
        run: bun install

      - name: Download and extract onnxruntime
        run: |
          wget https://github.com/MosRat/BnuCrow3/releases/download/deps/onnxruntime-aarch64-android.zip -O onnxruntime.zip
          unzip onnxruntime.zip -d onnxruntime
          echo "ORT_LIB_LOCATION=$(pwd)/onnxruntime" >> $GITHUB_ENV

      - name: Set NDK_HOME
        run: echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/28.0.12433566" >> $GITHUB_ENV
          
      - name: Set environment variables
        run: |
          echo "RUSTFLAGS=-C link-arg=-lc++ -C link-arg=-lc++abi -C link-arg=-ldl -C link-arg=-lm -C link-arg=-lz -C link-arg=-lcompiler_rt-extras -C link-arg=-lc++experimental -C link-arg=-lc++_static -C link-arg=-landroid -C link-arg=-llog -C link-arg=-static -C link-arg=-v" >> $GITHUB_ENV

      - name: Generate release tag (Unix)
        if: runner.os != 'Windows'
        id: generate_tag_unix
        run: echo "TAG=${GITHUB_RUN_NUMBER}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        shell: bash


      - name: Write keystore.properties
        env:
          KEYSTORE_PROPERTIES_CONTENT: ${{ secrets.KEYSTORE }}
        run: |
          mkdir -p src-tauri/gen/android
          echo "$KEYSTORE_PROPERTIES_CONTENT" > src-tauri/gen/android/keystore.properties
          

      - name: Build APK
        run: bun run tauri android build -t aarch64 --apk

      - name: Extract app version
        id: extract_version
        run: |
          VERSION=$(jq -r '.version' tauri.conf.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Upload APK to release
        uses: softprops/action-gh-release@v1
        with:
          files: src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk
          tag_name: app-v${{ env.VERSION }}-${{ steps.generate_tag_unix.outputs.TAG }}
          release_name: 'App v${{ env.VERSION }}'
          body: 'See the assets to download this version and install.'
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
